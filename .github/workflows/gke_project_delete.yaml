name: Delete deployment environment

on:
  delete

env:
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-c

jobs:
  deployment_removal:
    if: github.event.ref_type == 'branch' # Don't run on tag deletion (only for branch)
    runs-on: ubuntu-latest
    steps:
    # Initialize
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}
    - name: Configure Docker for Google Container Registry
      run: gcloud --quiet auth configure-docker
    - name: Configure kubectl for access to cluster
      run: gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

    # Delete from cluster
    - name: Delete all resources
      run: kubectl delete all --all -n ${{ github.event.ref }}
    - name: Delete namespace
      run: kubectl delete namespace ${{ github.event.ref }}

    # Create repository and branch name vars for GCR image deletion
    # Repository example: gcr.io/some-project-456789
    - name: Add repository and branch name to env vars
      run: |
        echo "REPOSITORY=gcr.io/${{ secrets.GKE_PROJECT }}" >> $GITHUB_ENV
        echo "BRANCH_NAME=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

    # Delete images from Google Container Registry
    # DANGER! HUOM! OBS! This ins't safe to use since branch name filter might 
    # match other branches as well. For example filter "new-feature-" for branch
    # "new-feature" will match also images for branch "new-feature-plus".  
    - name: Delete images
      run: |
        for name in $(gcloud container images list \
          --repository=${REPOSITORY} \
          --filter="name:/todo-" \
          --format="get(name)"); do
          for digest in $(gcloud container images list-tags $name \
            --filter="tags:${BRANCH_NAME}-" \
            --format="get(digest)"); do
              gcloud container images delete $name@$digest --force-delete-tags --quiet
          done
        done